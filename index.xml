<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Project OpenUBL</title><link>https://project-openubl.github.io/</link><description>Recent content on Project OpenUBL</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Thu, 30 Jan 2020 00:38:25 +0900</lastBuildDate><atom:link href="https://project-openubl.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Serie y número</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/summarydocument/serie-numero/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/summarydocument/serie-numero/</guid><description>Serie y número La serie y número de un comprobante de Resumen Diario tiene la siguiente estructura: codigo-fechaEmision-número. Por ejemplo : RC-20190101-1
XML Builder creará la estructura correcta basada en los datos enviados y la configuración del servidor, tu sólo necesitas enviar en numero de comprobante de Resumen Diario que estas emitiendo en el dia.
¿Qué campo utilizar? Se debe de utilizar el campo numero
{ &amp;quot;numero&amp;quot;: 1 } Ejemplo Primera Resumen Diario del día.</description></item><item><title>Serie y número</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/voideddocument/serie-numero/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/voideddocument/serie-numero/</guid><description>Serie y número La serie y número de un comprobante de baja tiene la siguiente estructura: codigo-fechaEmision-número. Por ejemplo : RA-20190101-1
XML Builder creará la estructura correcta basada en los datos enviados y la configuración del servidor, tu sólo necesitas enviar en numero de comprobante de baja que estas emitiendo en el dia.
¿Qué campo utilizar? Se debe de utilizar el campo numero
{ &amp;quot;numero&amp;quot;: 1 } Ejemplo Primera baja del día.</description></item><item><title>Soportados</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/soportados/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/soportados/</guid><description>Comprobantes soportados Los comprobantes soportados en la presente version son:
Boleta. Factura. Nota de Crédito. Nota de Débito. Baja. Resumen Diario. Percepción. Retención. Guía de Remisión. Recuerda que si deseas solicitar otros documentos o introducir mejoras a los documentos existentes puedes solicitarlo aquí</description></item><item><title>Tipo de IGV</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/credit-debit-note/tipo-igv/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/credit-debit-note/tipo-igv/</guid><description>Tipo de IGV Puedes utilizar el campo detalle.tipoIgv para indicar que tipo de IGV se aplicará al producto o bien vendido:
Operaciones GRAVADAS Operaciones EXONERADAS Operaciones INAFECTAS Operaciones GRATUITAS Nota: El &amp;lsquo;Tipo de IGV&amp;rsquo; en notas de crédito y notas de débito funcionan exactamente igual que una boleta o factura, para obtener informacion acerca de este campo lea la documentación del mismo campo en Boleta/Factura</description></item><item><title>Tipo de IGV</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/invoice/tipo-igv/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/invoice/tipo-igv/</guid><description>Tipo de IGV Puedes utilizar el campo detalle.tipoIgv para indicar que tipo de IGV se aplicará al producto o bien vendido:
Operaciones GRAVADAS Operaciones EXONERADAS Operaciones INAFECTAS Operaciones GRATUITAS ¿Qué campo utilizar? Se debe de utilizar el campo detalle.tipoIGV
{ &amp;quot;detalle&amp;quot;: [ { &amp;quot;tipoIgv&amp;quot;: &amp;quot;mi tipo de IGV a aplicar&amp;quot; } ] } ¿Cuales son los posibles valores de &amp;lsquo;tipoIgv&amp;rsquo;? tipoIgv puede tener cualquier valor del Catalogo 07:</description></item><item><title>¿Qué es?</title><link>https://project-openubl.github.io/xml-builder-docs/que_es/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/que_es/</guid><description>¿Qué es XML Builder? XML Builder es un projecto Open Source distribuido en la forma de un micro servicio que es capáz de crear archivos XML basados en el estadar UBL 2.1.
Paises soportados:
Perú XML Builder para tu país Solicita soporte para tu país creando in Github Issue aquí
¡No olvides que XML Builder es Open Source y tú también puedes contribuir!
¿Qué ofrece? Genera los XMLs utilizando los datos mínimos requeridos.</description></item><item><title>Java</title><link>https://project-openubl.github.io/xml-builder-docs/instalacion/java/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/instalacion/java/</guid><description>Instalación usando Java XML Builder y XML Builder Signer están hechos en Java y pueden ser ejecutados por el JVM de Java utilizando todos los métodos estandar para ejecutar artefactos Java.
Requisitos Tener instalado Java (versión 8 u 11) Notas adicionales Este método es válido para Sistemas Operativos Windows, Linux, y MacOS. Pasos para levantar el servidor Los mismos pasos aplican para XML Builder y XML Builder Signer.</description></item><item><title>SwaggerHub</title><link>https://project-openubl.github.io/xml-builder-docs/integracion/swaggerhub/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/integracion/swaggerhub/</guid><description>SwaggerHub Nuestros APIs están expuestos en los siguientes links:
xml-builder API Docs xml-builder-signer API Docs Tu puedes crear tus librerias clientes utilizando las herramientas que SwaggerHub te ofrece. SwaggerHub ofrece la creación de clientes para:
Csharp Java Jaxrs-cxf-client PHP Python Scala Kotlin-client Swift3 Swift4 Swift5 Typescript-angular Si tu aplicación está hecha utilizando alguno de las opciones de la lista anterior, entonces lo único que tendrás que hacer es descargar el cliente y empezar a utilizarlos directamente en tu aplicación.</description></item><item><title>XML Builder</title><link>https://project-openubl.github.io/xml-builder-docs/distribuciones/xml-builder/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/distribuciones/xml-builder/</guid><description>XML Builder XML Builder es un servidor ligero que no necesita ninguna base de datos. Útil para empresas que ya cuentan con algún software para firmar sus XMLs.
Características:
No requiere de ninguna base de datos. Crea comprobantes electrónicos pero los comprobantes no son firmados. API Docs La documentación de las APIS puede ser encontrada en el siguiente link:
apis-docs Ejemplo Los comprobantes generados por XML Builder no contienen firma electrónica, tal y como se muestra en el siguiente ejemplo:</description></item><item><title>April 2020</title><link>https://project-openubl.github.io/updates/2020_april/</link><pubDate>Tue, 28 Jan 2020 00:10:48 +0900</pubDate><guid>https://project-openubl.github.io/updates/2020_april/</guid><description>Version 1.0.0.Final Despues de mucho trabajo en XML Builder la primera version estable está finalmente disponible.
¿Qué cambios ser realizaron? Se removió la dependencia de Kogito Rules debido a que por el momento la libreria es un poco inestable. No se descarta la posiblidad de incluir Kogito en futuras versiones. Se removió las páginas UI que permitían la simulación de creación de comprobantes, y en su lugar se incluyó un conjunto de componentes UI basados en OpenAPI - Swagger que permiten simular y explotar todos los rest endpoint de XML Builder.</description></item><item><title>ICB</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/credit-debit-note/icb/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/credit-debit-note/icb/</guid><description>ICB Puedes utilizar el campo detalle.icb para indicar que el producto está afecto al impuesto ICB.
Nota: El &amp;lsquo;ICB&amp;rsquo; en notas de crédito y notas de débito funcionan exactamente igual que una boleta o factura, para obtener informacion acerca de este campo lea la documentación del mismo campo en Boleta/Factura</description></item><item><title>ICB</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/invoice/icb/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/invoice/icb/</guid><description>ICB Si un bien está afecto al impuesto ICB entonces debes de usar el campo icb para indicar que el bien está afecto al impuesto mencionado:
¿Qué campo utilizar? Se debe de utilizar el campo detalle.icb
{ &amp;quot;detalle&amp;quot;: [ { &amp;quot;icb&amp;quot;: true } ] } ¿Cuales son los posibles valores de &amp;lsquo;icb&amp;rsquo;? icb puede ser true o false.
&amp;quot;icb&amp;quot; = true indica que el bien está afecto al impuesto ICB.</description></item><item><title>Precio</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/credit-debit-note/precio/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/credit-debit-note/precio/</guid><description>Precio del producto o servicio Puedes utilizar uno de los siguientes campos:
detalle.precioUnitario: Precio del producto sin incluir impuestos. Ó detalle.precioConIgv: Precio del producto despues de aplicar el IGV. Nota: Los campos de precios en notas de crédito y notas de débito funcionan exactamente igual que una boleta o factura, para obtener informacion acerca de este campo lea la documentación del mismo campo en Boleta/Factura</description></item><item><title>Tipo operación</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/summarydocument/tipo-operacion/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/summarydocument/tipo-operacion/</guid><description>Tipo de Operación El tipo de operación determina el estado de cada comprobante incluido en el resumen diario. Sus valores provienen del Catálogo 19.
¿Qué campo utilizar? Se debe de utilizar el campo detalle.tipoOperacion
{ &amp;quot;detalle&amp;quot;: [ { &amp;quot;tipoOperacion&amp;quot;: &amp;quot;mi tipo de operación a aplicar&amp;quot; } ] } ¿Cuales son los posibles valores de &amp;lsquo;detalle.tipoOperacion&amp;rsquo;? detalle.tipoOperacion puede tener cualquier valor del Catalogo 19:
ADICIONAR o 1 MODIFICAR o 2 ANULADO o 3 Ejemplo Resumen diario que:</description></item><item><title>Docker</title><link>https://project-openubl.github.io/xml-builder-docs/instalacion/docker/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/instalacion/docker/</guid><description>Instalación usando Docker Este método es el más fácil de usar y el más recomendado cuando se quiere experimentar con el software.
Requisitos Tener instalado Docker Notas adicionales Este método es el recomendado para integrar tu software durante Desarrollo. Este método no es recomendable para Producción. XML Builder Levantar el servidor XML Builder es muy sencillo, solamente tienes que abrir un terminal y ejecutar el siguiente comando:</description></item><item><title>Java</title><link>https://project-openubl.github.io/xml-builder-docs/integracion/java/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/integracion/java/</guid><description> Clientes Java Existen varios clientes Java que puedes utilizar pero los más usados en el mercado son:
Resteasy Client. Recomendable si tu aplicación es desplegada en Wildfly, Jboss EAP, Thorntail. Http Components. Etc.</description></item><item><title>XML Builder Signer</title><link>https://project-openubl.github.io/xml-builder-docs/distribuciones/xml-builder-signer/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/distribuciones/xml-builder-signer/</guid><description>XML Builder Signer Incluye todas las funcionalidades de XML Builder pero además agrega algunas funcionalidades. Útil para empresas que desean delegar el proceso de firma electrónica a otro software.
Características:
Permite generar, almacenar, importar certificados digitales. Firmar electrónicamente los archivos XMLs. Es multi empresa. Requiere de una base de datos. API Docs La documentación de las APIS puede ser encontrada en el siguiente link:
apis-docs Ejemplo Los comprobantes generados por XML Builder Signer si contienen firma electrónica, tal y como se muestra en el siguiente ejemplo:</description></item><item><title>Comprobante afectado</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/summarydocument/comprobante-afectado/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/summarydocument/comprobante-afectado/</guid><description>Comprobante Afectado Cuando el Resumen Diario contiene Notas de Crédito o Notas de Débito entonces se debe de incluir el comprobante en sí y además el comprobante afectado por cada nota.
Por ejemplo, si deseas informar una nota de crédito entonces debes de enviar la información de la nota de crédito y tambien de la boleta o factura a la que afecta la nota de crédito.
¿Qué campo utilizar? Se debe de utilizar el campo detalle.</description></item><item><title>Precio</title><link>https://project-openubl.github.io/xml-builder-docs/comprobantes/invoice/precio/</link><pubDate>Thu, 30 Jan 2020 00:38:25 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/comprobantes/invoice/precio/</guid><description>Precio del producto o servicio Puedes utilizar uno de los siguientes campos:
detalle.precioUnitario: Precio del producto sin incluir impuestos. Ó detalle.precioConIgv: Precio del producto despues de aplicar el IGV. Dependiendo de la forma en la que defines tus precios deberás de escoger unos de los campos descritos en la lista anterior. Si envías ambos campos se tomará en cuenta solamente detalle.precioUnitario. Esto es más conocido como cálculo de izquierda a derecha y cálculos de derecha a izquierda.</description></item><item><title>Javascript</title><link>https://project-openubl.github.io/xml-builder-docs/integracion/javascript/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/integracion/javascript/</guid><description>Javascript en el Browser Puedes utilizar la librería de tu preferencia, acá una lista de posibles opciones si lo que quieres es integrar tu aplicacion hecha en Javascript:
Jquery Ajax. Recomendable si tu aplicación está hecha usando JQuery. Axios. Recomendable si tu aplicación está basada en Reactjs Fetch API Implementación nativa basada en Promises. Angular HttpClient Recomemdable si tu aplicación está hecha en Angular. Javascript en el Servidor Si tu aplicación es desplegada en servidores NodeJS entonces tienes una gran variedad de posibilidades pero la más usada es:</description></item><item><title>Configuracion</title><link>https://project-openubl.github.io/xml-builder-docs/configuracion/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/configuracion/</guid><description>Configuración del servidor XML Builder y XML Builder Signer permite configurar los valores que el servidor utiliza para hacer cálculos automáticos.
La forma en la que XML Builder y XML Builder Signer pueden ser configurados es a travéz del uso de variables de entorno. En la siguiente sección encontrarás la lista de variables existentes en el servidor.
Variables generales Este conjunto de variables son válidas para ambos servidores XML Builder y XML Builder Signer:</description></item><item><title>Openshift</title><link>https://project-openubl.github.io/xml-builder-docs/instalacion/openshift/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/instalacion/openshift/</guid><description>Instalación usando Openshift XML Builder y XML Builder Signer pueden ser desplegados fácilmente en Openshift. Openshift te permite utilizar todos los beneficios de una plataforma empresarial basada en contenedores.
Las plantillas Openshift del proyecto se encuentran en:
api/src/main/kubernetes/openshift.yml y api-signer/src/main/kubernetes/openshift.yml. Para conocer un poco más sobre plantillas Openshift puedes leer la documentación oficial acá.
Requisitos Tener acceso a una instancia de Openshift V3 o V4 Notas adicionales Este método es el recomendado para Producción.</description></item><item><title>Desarrolladores</title><link>https://project-openubl.github.io/xml-builder-docs/desarrolladores/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/desarrolladores/</guid><description>Levantar servidor para desarrollo Requisitos: Maven Git Java - OpenJDK (8, 11) Levantar el servidor Para levantar el backend en modo desarrollo necesitas:
Hacer un fork al projecto https://github.com/project-openubl/xml-builder clonar el project que acabas de hacer fork:
git clone https://github.com/carlosthe19916/xml-builder.git Recuerda cambiar carlosthe19916 por el usuario con el que hiciste Fork en el paso anterior
Ubicarte en la carpeta que acabas de descargar</description></item><item><title>Linux</title><link>https://project-openubl.github.io/xml-builder-docs/instalacion/linux/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/instalacion/linux/</guid><description>Instalación en Linux Requisitos Tener un Sistema Operativo Linux Notas adicionales El primer método de instalación usando Java también es válido en Sistemas Operativos Linux. En Linux, se recomienda la instalación de los artefactos nativos utiliando los pasos descritos en esta página. Este método es recomendado para Producción. Instalación nativa XML Builder y XML Builder Signer pueden ser compilados utilizando GraalVM gracias a las herramientas brindadas por Quarkus.</description></item><item><title>Windows</title><link>https://project-openubl.github.io/xml-builder-docs/instalacion/windows/</link><pubDate>Tue, 28 Jan 2020 00:36:14 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/instalacion/windows/</guid><description>Instalación en Windows Requisitos Tener Sistema Operativo Windows Notas adicionales Todos los Métodos anteriores: Java y Docker son válidos para Windows. Pasos para levantar el servidor Solo por cuestiones de ilustración se pondrá el siguiente ejemplo:
Descargar el servidor desde la página releases. Debes de seleccionar la distribución que deseas instalar jdk-xml-builder.tgz o jdk-xml-builder-signer.tgz. Descomprimir el archivo descargado en el paso anterior. Abrir un terminal y ubicarse en la carpeta donde el servidor fue extraido.</description></item><item><title>Otros recursos</title><link>https://project-openubl.github.io/xml-builder-docs/otros-recursos/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/otros-recursos/</guid><description> Documentación y ayuda Documentación Videos Mailing list Puedes hacer preguntas y recibir noticias a travéz de nuestro mailing list. Únete al grupo:
Enviando un correo a projectopenubl+subscribe@googlegroups.com o Uniéndote al grupo https://groups.google.com/d/forum/projectopenubl APIs Para saber saber más acerca de los endpoints visita:
XML Builder API Docs XML Builder Signer: API Docs</description></item><item><title>Solicita mejoras</title><link>https://project-openubl.github.io/xml-builder-docs/solicita-mejoras/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-builder-docs/solicita-mejoras/</guid><description> Solicita mejoras Recuerda que puedes interactuar con el projecto a travéz de
Github Issues</description></item><item><title>Placeholder Text</title><link>https://project-openubl.github.io/blog/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>https://project-openubl.github.io/blog/placeholder-text/</guid><description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de
pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice
subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc
caluere tempus&lt;/p&gt;</description></item></channel></rss>