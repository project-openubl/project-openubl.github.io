(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{133:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),l=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},s=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),d=l(n),s=r,b=d["".concat(u,".").concat(s)]||d[s]||p[s]||a;return n?o.a.createElement(b,i(i({ref:t},c),{},{components:n})):o.a.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,u=new Array(a);u[0]=s;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:r,u[1]=i;for(var c=2;c<a;c++)u[c]=n[c];return o.a.createElement.apply(null,u)}return o.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return m})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(7),a=(n(0),n(133)),u={title:"SummaryDocument (Resumen diario)",description:"Crear resumen diario"},i={unversionedId:"xbuilder/ejemplos/summaryDocument",id:"xbuilder/ejemplos/summaryDocument",isDocsHomePage:!1,title:"SummaryDocument (Resumen diario)",description:"Crear resumen diario",source:"@site/docs/xbuilder/ejemplos/summaryDocument.md",slug:"/xbuilder/ejemplos/summaryDocument",permalink:"/docs/xbuilder/ejemplos/summaryDocument",editUrl:"https://github.com/project-openubl/website/edit/master/docs/xbuilder/ejemplos/summaryDocument.md",version:"current",sidebar:"xbuilder",previous:{title:"VoidedDocument (Baja)",permalink:"/docs/xbuilder/ejemplos/voidedDocument"},next:{title:"IGV",permalink:"/docs/xbuilder/ejemplos/igv"}},m=[{value:"Create <em>SummaryDocumentType</em>",id:"create-summarydocumenttype",children:[]},{value:"How the <em>documentID</em> is calculated",id:"how-the-documentid-is-calculated",children:[]}],c={rightToc:m};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"create-summarydocumenttype"},"Create ",Object(a.b)("em",{parentName:"h2"},"SummaryDocumentType")),Object(a.b)("p",null,"Para crear una baja debes de crear una instancia de ",Object(a.b)("inlineCode",{parentName:"p"},"SummaryDocumentInputModel")," y usarlo para crear el XML:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java",metastring:"{46}","{46}":!0}),'Config config;\nSystemClock clock;\n\n// Create the POJO\nCalendar calendar = Calendar.getInstance();\ncalendar.set(2019, Calendar.DECEMBER, 1, 20, 30, 59);\n\nSummaryDocumentInputModel pojo = SummaryDocumentInputModel.Builder.aSummaryDocumentInputModel()\n        .withNumero(1)\n        .withFechaEmisionDeComprobantesAsociados(calendar.getTimeInMillis())\n        .withProveedor(ProveedorInputModel.Builder.aProveedorInputModel()\n                .withRuc("12345678912")\n                .withRazonSocial("Softgreen S.A.C.")\n                .build()\n        )\n        .withDetalle(Collections.singletonList(\n                SummaryDocumentLineInputModel.Builder.aSummaryDocumentLineInputModel()\n                        .withTipoOperacion(Catalog19.ADICIONAR.toString())\n                        .withComprobante(SummaryDocumentComprobanteInputModel.Builder.aSummaryDocumentComprobanteInputModel()\n                                .withTipo(Catalog1.BOLETA.toString())\n                                .withSerieNumero("B001-1")\n                                .withCliente(ClienteInputModel.Builder.aClienteInputModel()\n                                        .withNombre("Carlos Feria")\n                                        .withNumeroDocumentoIdentidad("12345678")\n                                        .withTipoDocumentoIdentidad(Catalog6.DNI.toString())\n                                        .build()\n                                )\n                                .withImpuestos(SummaryDocumentImpuestosInputModel.Builder.aSummaryDocumentImpuestosInputModel()\n                                        .withIgv(new BigDecimal("100"))\n                                        .build()\n                                )\n                                .withValorVenta(SummaryDocumentComprobanteValorVentaInputModel.Builder.aSummaryDocumentComprobanteValorVentaInputModel()\n                                        .withImporteTotal(new BigDecimal("118"))\n                                        .withGravado(new BigDecimal("100"))\n                                        .build()\n                                )\n                                .build()\n                        )\n                        .build()\n        ))\n        .build();\n\n// When\nDocumentWrapper<SummaryDocumentOutputModel> result = DocumentManager.createXML(pojo, config, systemClock);\nSummaryDocumentOutputModel output = result.getOutput();\nString xml = result.getXml();\n')),Object(a.b)("h2",{id:"how-the-documentid-is-calculated"},"How the ",Object(a.b)("em",{parentName:"h2"},"documentID")," is calculated"),Object(a.b)("p",null,"The ",Object(a.b)("em",{parentName:"p"},"documentID")," has the structure:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("em",{parentName:"li"},"code-date-number"),". E.g. ",Object(a.b)("inlineCode",{parentName:"li"},"RC-20190101-1"))),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"XBuilder")," will create the correct ",Object(a.b)("em",{parentName:"p"},"documentID")," for you, you only need to define the ",Object(a.b)("inlineCode",{parentName:"p"},"number")," of ",Object(a.b)("em",{parentName:"p"},"SummaryDocuments")," created during the day."))}l.isMDXComponent=!0}}]);