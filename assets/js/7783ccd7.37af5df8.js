"use strict";(self.webpackChunkproject_openubl=self.webpackChunkproject_openubl||[]).push([[6771],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.createContext({}),u=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(d.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,b=p["".concat(d,".").concat(m)]||p[m]||s[m]||o;return n?i.createElement(b,r(r({ref:t},c),{},{components:n})):i.createElement(b,r({ref:t},c))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:a,r[1]=l;for(var u=2;u<o;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1999:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=n(7462),a=(n(7294),n(3905));const o={title:"Precio"},r=void 0,l={unversionedId:"xbuilder/examples/selling-price",id:"xbuilder/examples/selling-price",title:"Precio",description:"Cuando creas una boleta, factura, nota de c\u0155edito, o nota de d\xe9bito existen dos tipos de precios que deben de ser incluidos en el XML:",source:"@site/docs/04-xbuilder/07-examples/08-selling-price.md",sourceDirName:"04-xbuilder/07-examples",slug:"/xbuilder/examples/selling-price",permalink:"/docs/xbuilder/examples/selling-price",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-xbuilder/07-examples/08-selling-price.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Precio"},sidebar:"tutorialSidebar",previous:{title:"ICB",permalink:"/docs/xbuilder/examples/icb"},next:{title:"Pago contado/credito",permalink:"/docs/xbuilder/examples/forma-pago"}},d={},u=[{value:"Caso 1 - Cantidad y Precio antes de impuestos",id:"caso-1---cantidad-y-precio-antes-de-impuestos",level:2},{value:"<em>Invoice (boleta/factura)</em>",id:"invoice-boletafactura",level:3},{value:"<em>CreditNote (nota de cr\xe9dito)</em>",id:"creditnote-nota-de-cr\xe9dito",level:3},{value:"<em>DebitNote (nota de d\xe9bito)</em>",id:"debitnote-nota-de-d\xe9bito",level:3},{value:"Caso 2 - Cantidad y Precio despu\xe9s de impuestos",id:"caso-2---cantidad-y-precio-despu\xe9s-de-impuestos",level:2},{value:"<em>Invoice (boleta/factura)</em>",id:"invoice-boletafactura-1",level:3},{value:"<em>CreditNote (nota de cr\xe9dito)</em>",id:"creditnote-nota-de-cr\xe9dito-1",level:3},{value:"<em>DebitNote (nota de d\xe9bito)</em>",id:"debitnote-nota-de-d\xe9bito-1",level:3}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Cuando creas una ",(0,a.kt)("strong",{parentName:"p"},"boleta, factura, nota de c\u0155edito, o nota de d\xe9bito")," existen dos tipos de precios que deben de ser incluidos en el XML:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Precio antes de impuestos."),(0,a.kt)("li",{parentName:"ul"},"Precio despu\xe9s de impuestos.")),(0,a.kt)("p",null,"El precio de un producto o servicio es combinado con la ",(0,a.kt)("em",{parentName:"p"},"cantidad")," y como resultado se obtiene el precio final de venta:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"CANTIDAD ","*"," PRECIO ANTES DE IMPUESTOS = PRECIO DE VENTA")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"XBuilder")," requiere solo 2 de las 3 variables de la f\xf3rmula anterior, la tercera variable ser\xe1 calculada autom\xe1ticamente."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Caso 1")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"Cantidad")," y ",(0,a.kt)("inlineCode",{parentName:"li"},"precio antes de impuestos"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Caso 2")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"Cantidad")," y ",(0,a.kt)("inlineCode",{parentName:"li"},"precio despu\xe9s de impuestos"),".")),(0,a.kt)("h2",{id:"caso-1---cantidad-y-precio-antes-de-impuestos"},"Caso 1 - Cantidad y Precio antes de impuestos"),(0,a.kt)("p",null,"El ",(0,a.kt)("inlineCode",{parentName:"p"},"precio antes de impuestos")," puede ser definido mediante el campo ",(0,a.kt)("inlineCode",{parentName:"p"},"precioUnitario"),":"),(0,a.kt)("h3",{id:"invoice-boletafactura"},(0,a.kt)("em",{parentName:"h3"},"Invoice (boleta/factura)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"{4,5,8,9}","{4,5,8,9}":!0},"InvoiceInputModel pojo = InvoiceInputModel.Builder.anInvoiceInputModel()\n        .withDetalle(Arrays.asList(\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioUnitario(new BigDecimal(100))\n                        .build(),\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioUnitario(new BigDecimal(100))\n                        .build())\n        )\n        .build();\n")),(0,a.kt)("h3",{id:"creditnote-nota-de-cr\xe9dito"},(0,a.kt)("em",{parentName:"h3"},"CreditNote (nota de cr\xe9dito)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"{4,5,8,9}","{4,5,8,9}":!0},"CreditNoteInputModel pojo = CreditNoteInputModel.Builder.aCreditNoteInputModel()\n        .withDetalle(Arrays.asList(\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioUnitario(new BigDecimal(100))\n                        .build(),\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioUnitario(new BigDecimal(100))\n                        .build())\n        )\n        .build();\n")),(0,a.kt)("h3",{id:"debitnote-nota-de-d\xe9bito"},(0,a.kt)("em",{parentName:"h3"},"DebitNote (nota de d\xe9bito)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"{4,5,8,9}","{4,5,8,9}":!0},"DebitNoteInputModel pojo = DebitNoteInputModel.Builder.aDebitNoteInputModel()\n        .withDetalle(Arrays.asList(\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioUnitario(new BigDecimal(100))\n                        .build(),\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioUnitario(new BigDecimal(100))\n                        .build())\n        )\n        .build();\n")),(0,a.kt)("h2",{id:"caso-2---cantidad-y-precio-despu\xe9s-de-impuestos"},"Caso 2 - Cantidad y Precio despu\xe9s de impuestos"),(0,a.kt)("p",null,"El ",(0,a.kt)("inlineCode",{parentName:"p"},"precio despu\xe9s de impuestos")," puede ser definido mediante el campo ",(0,a.kt)("inlineCode",{parentName:"p"},"precioConIgv"),":"),(0,a.kt)("h3",{id:"invoice-boletafactura-1"},(0,a.kt)("em",{parentName:"h3"},"Invoice (boleta/factura)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"{4,5,8,9}","{4,5,8,9}":!0},"InvoiceInputModel pojo = InvoiceInputModel.Builder.anInvoiceInputModel()\n        .withDetalle(Arrays.asList(\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioConIgv(new BigDecimal(118))\n                        .build(),\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioConIgv(new BigDecimal(118))\n                        .build())\n        )\n        .build();\n")),(0,a.kt)("h3",{id:"creditnote-nota-de-cr\xe9dito-1"},(0,a.kt)("em",{parentName:"h3"},"CreditNote (nota de cr\xe9dito)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"{4,5,8,9}","{4,5,8,9}":!0},"CreditNoteInputModel pojo = CreditNoteInputModel.Builder.aCreditNoteInputModel()\n        .withDetalle(Arrays.asList(\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioConIgv(new BigDecimal(118))\n                        .build(),\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioConIgv(new BigDecimal(118))\n                        .build())\n        )\n        .build();\n")),(0,a.kt)("h3",{id:"debitnote-nota-de-d\xe9bito-1"},(0,a.kt)("em",{parentName:"h3"},"DebitNote (nota de d\xe9bito)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:"{4,5,8,9}","{4,5,8,9}":!0},"DebitNoteInputModel pojo = DebitNoteInputModel.Builder.aDebitNoteInputModel()\n        .withDetalle(Arrays.asList(\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioConIgv(new BigDecimal(118))\n                        .build(),\n                DocumentLineInputModel.Builder.aDocumentLineInputModel()\n                        .withCantidad(new BigDecimal(10))\n                        .withPrecioConIgv(new BigDecimal(118))\n                        .build())\n        )\n        .build();\n")))}p.isMDXComponent=!0}}]);