"use strict";(self.webpackChunkproject_openubl=self.webpackChunkproject_openubl||[]).push([[6425],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>b});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=n.createContext({}),i=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},c=function(e){var a=i(e.components);return n.createElement(p.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=i(t),d=r,b=u["".concat(p,".").concat(d)]||u[d]||m[d]||s;return t?n.createElement(b,l(l({ref:a},c),{},{components:t})):n.createElement(b,l({ref:a},c))}));function b(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=d;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var i=2;i<s;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},780:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>i});var n=t(7462),r=(t(7294),t(3905));const s={title:"Kubernetes"},l="Instala [Searchpe Operator](https://operatorhub.io/operator/searchpe-operator)",o={unversionedId:"searchpe/installation/kubernetes",id:"searchpe/installation/kubernetes",title:"Kubernetes",description:"Requisitos",source:"@site/docs/06-searchpe/03-installation/kubernetes.md",sourceDirName:"06-searchpe/03-installation",slug:"/searchpe/installation/kubernetes",permalink:"/docs/searchpe/installation/kubernetes",draft:!1,editUrl:"https://github.com/project-openubl/website/tree/master/docs/06-searchpe/03-installation/kubernetes.md",tags:[],version:"current",frontMatter:{title:"Kubernetes"},sidebar:"tutorialSidebar",previous:{title:"Java",permalink:"/docs/searchpe/installation/java"},next:{title:"Consola web",permalink:"/docs/searchpe/web-console"}},p={},i=[{value:"Requisitos",id:"requisitos",level:2},{value:"Inicia Minikube",id:"inicia-minikube",level:2},{value:"Crea un namespace",id:"crea-un-namespace",level:2},{value:"Crea una base de datos",id:"crea-una-base-de-datos",level:2},{value:"Instala Searchpe",id:"instala-searchpe",level:2},{value:"Ingresa a la consola web",id:"ingresa-a-la-consola-web",level:2}],c={toc:i};function u(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"instala-searchpe-operator"},"Instala ",(0,r.kt)("a",{parentName:"h1",href:"https://operatorhub.io/operator/searchpe-operator"},"Searchpe Operator")),(0,r.kt)("h2",{id:"requisitos"},"Requisitos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start/"},"Minikube")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"Kubectl"))),(0,r.kt)("h2",{id:"inicia-minikube"},"Inicia Minikube"),(0,r.kt)("p",null,"Ejecuta el comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"minikube start --kubernetes-version 1.24.7\n")),(0,r.kt)("p",null,"Habilita addons:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"minikube addons enable ingress\n")),(0,r.kt)("p",null,"Instala OLM:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.22.0/install.sh | bash -s v0.22.0\n")),(0,r.kt)("h2",{id:"crea-un-namespace"},"Crea un namespace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns my-searchpe-operator\n")),(0,r.kt)("h2",{id:"crea-una-base-de-datos"},"Crea una base de datos"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/postgresql.yaml\nkubectl get csv -n operators\n")),(0,r.kt)("p",null,"Instancia la base de datos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-searchpe-operator apply -f -\napiVersion: postgres-operator.crunchydata.com/v1beta1\nkind: PostgresCluster\nmetadata:\n  name: postgresql\nspec:\n  postgresVersion: 14\n  instances:\n    - name: pg-1\n      replicas: 1\n      dataVolumeClaimSpec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  backups:\n    pgbackrest:\n      repos:\n      - name: repo1\n        volume:\n          volumeClaimSpec:\n            accessModes:\n            - ReadWriteOnce\n            resources:\n              requests:\n                storage: 1Gi\n  users:\n    - name: foo\n      databases:\n        - searchpedb\n      options: "SUPERUSER"\nEOF\n')),(0,r.kt)("p",null,"Espera hasta que tus Pods esten listos."),(0,r.kt)("h2",{id:"instala-searchpe"},"Instala Searchpe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/searchpe-operator.yaml\nkubectl get csv -n my-searchpe-operator\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-searchpe-operator apply -f -\nkind: "Searchpe"\napiVersion: "searchpe.openubl.io/v1alpha1"\nmetadata:\n  name: searchpe\nspec:\n  db:\n    usernameSecret:\n      name: postgresql-pguser-foo\n      key: user\n    passwordSecret:\n      name: postgresql-pguser-foo\n      key: password\n    url: jdbc:postgresql://postgresql-primary.my-searchpe-operator.svc:5432/searchpedb\nEOF\n')),(0,r.kt)("h2",{id:"ingresa-a-la-consola-web"},"Ingresa a la consola web"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ingresa a la consola de Minikube")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"minikube dashboard\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Selecciona el namespace ",(0,r.kt)("inlineCode",{parentName:"li"},"my-searchpe-operator")),(0,r.kt)("li",{parentName:"ul"},"Click en ",(0,r.kt)("inlineCode",{parentName:"li"},"Service/Ingresses")),(0,r.kt)("li",{parentName:"ul"},"Click en el Enpoint de Searchpe")))}u.isMDXComponent=!0}}]);