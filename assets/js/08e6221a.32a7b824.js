"use strict";(self.webpackChunkproject_openubl=self.webpackChunkproject_openubl||[]).push([[7140],{15680:(e,n,a)=>{a.d(n,{xA:()=>p,yg:()=>m});var t=a(96540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=t.createContext({}),i=function(e){var n=t.useContext(u),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},p=function(e){var n=i(e.components);return t.createElement(u.Provider,{value:n},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=i(a),g=r,m=c["".concat(u,".").concat(g)]||c[g]||b[g]||l;return a?t.createElement(m,s(s({ref:n},p),{},{components:a})):t.createElement(m,s({ref:n},p))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=g;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:r,s[1]=o;for(var i=2;i<l;i++)s[i]=a[i];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},31364:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var t=a(58168),r=(a(96540),a(15680));const l={title:"Kubernetes"},s="Instala [Ublhub Operator](https://operatorhub.io/operator/ublhub-operator)",o={unversionedId:"ublhub/installation/kubernetes",id:"ublhub/installation/kubernetes",title:"Kubernetes",description:"Requisitos",source:"@site/docs/07-ublhub/03-installation/kubernetes.md",sourceDirName:"07-ublhub/03-installation",slug:"/ublhub/installation/kubernetes",permalink:"/docs/ublhub/installation/kubernetes",draft:!1,editUrl:"https://github.com/project-openubl/website/tree/master/docs/07-ublhub/03-installation/kubernetes.md",tags:[],version:"current",frontMatter:{title:"Kubernetes"},sidebar:"tutorialSidebar",previous:{title:"Java",permalink:"/docs/ublhub/installation/java"},next:{title:"Consola web",permalink:"/docs/ublhub/web-console"}},u={},i=[{value:"Requisitos",id:"requisitos",level:2},{value:"Inicia Minikube",id:"inicia-minikube",level:2},{value:"Crea un namespace",id:"crea-un-namespace",level:2},{value:"Crea una base de datos",id:"crea-una-base-de-datos",level:2},{value:"Instala Ublhub",id:"instala-ublhub",level:2},{value:"Ingresa a la consola web",id:"ingresa-a-la-consola-web",level:2}],p={toc:i},c="wrapper";function b(e){let{components:n,...a}=e;return(0,r.yg)(c,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"instala-ublhub-operator"},"Instala ",(0,r.yg)("a",{parentName:"h1",href:"https://operatorhub.io/operator/ublhub-operator"},"Ublhub Operator")),(0,r.yg)("h2",{id:"requisitos"},"Requisitos"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start/"},"Minikube")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"Kubectl"))),(0,r.yg)("h2",{id:"inicia-minikube"},"Inicia Minikube"),(0,r.yg)("p",null,"Ejecuta el comando:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"minikube start\n")),(0,r.yg)("p",null,"Habilita addons:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"minikube addons enable ingress\n")),(0,r.yg)("p",null,"Instala OLM:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.22.0/install.sh | bash -s v0.22.0\n")),(0,r.yg)("h2",{id:"crea-un-namespace"},"Crea un namespace"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns my-ublhub-operator\n")),(0,r.yg)("h2",{id:"crea-una-base-de-datos"},"Crea una base de datos"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/postgresql.yaml\nkubectl get csv -n operators\n")),(0,r.yg)("p",null,"Instancia la base de datos:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-ublhub-operator apply -f -\napiVersion: postgres-operator.crunchydata.com/v1beta1\nkind: PostgresCluster\nmetadata:\n  name: postgresql\nspec:\n  postgresVersion: 14\n  instances:\n    - name: pg-1\n      replicas: 1\n      dataVolumeClaimSpec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  backups:\n    pgbackrest:\n      repos:\n      - name: repo1\n        volume:\n          volumeClaimSpec:\n            accessModes:\n            - ReadWriteOnce\n            resources:\n              requests:\n                storage: 1Gi\n  users:\n    - name: foo\n      databases:\n        - ublhubdb\n      options: "SUPERUSER"\nEOF\n')),(0,r.yg)("p",null,"Espera hasta que tus Pods esten listos."),(0,r.yg)("h2",{id:"instala-ublhub"},"Instala Ublhub"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/ublhub-operator.yaml\nkubectl get csv -n my-ublhub-operator\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-ublhub-operator apply -f -\nkind: "Ublhub"\napiVersion: "ublhub.openubl.io/v1alpha1"\nmetadata:\n  name: ublhub\nspec:\n  db:\n    usernameSecret:\n      name: postgresql-pguser-foo\n      key: user\n    passwordSecret:\n      name: postgresql-pguser-foo\n      key: password\n    url: jdbc:postgresql://postgresql-primary.my-ublhub-operator.svc:5432/ublhubdb\n  storage:\n    type: "filesystem"\n    filesystem:\n      size: "1Gi"\nEOF\n')),(0,r.yg)("h2",{id:"ingresa-a-la-consola-web"},"Ingresa a la consola web"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Ingresa a la consola de Minikube")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"minikube dashboard\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Selecciona el namespace ",(0,r.yg)("inlineCode",{parentName:"li"},"my-ublhub-operator")),(0,r.yg)("li",{parentName:"ul"},"Click en ",(0,r.yg)("inlineCode",{parentName:"li"},"Service/Ingresses")),(0,r.yg)("li",{parentName:"ul"},"Click en el Enpoint de Ublhub")))}b.isMDXComponent=!0}}]);