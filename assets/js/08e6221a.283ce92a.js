"use strict";(self.webpackChunkproject_openubl=self.webpackChunkproject_openubl||[]).push([[4167],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),i=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=i(n),m=r,d=c["".concat(u,".").concat(m)]||c[m]||b[m]||l;return n?a.createElement(d,s(s({ref:t},p),{},{components:n})):a.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:r,s[1]=o;for(var i=2;i<l;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5044:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const l={title:"Kubernetes"},s="Instala [Ublhub Operator](https://operatorhub.io/operator/ublhub-operator)",o={unversionedId:"ublhub/installation/kubernetes",id:"ublhub/installation/kubernetes",title:"Kubernetes",description:"Requisitos",source:"@site/docs/07-ublhub/03-installation/kubernetes.md",sourceDirName:"07-ublhub/03-installation",slug:"/ublhub/installation/kubernetes",permalink:"/docs/ublhub/installation/kubernetes",draft:!1,editUrl:"https://github.com/project-openubl/website/tree/master/docs/07-ublhub/03-installation/kubernetes.md",tags:[],version:"current",frontMatter:{title:"Kubernetes"},sidebar:"tutorialSidebar",previous:{title:"Java",permalink:"/docs/ublhub/installation/java"},next:{title:"Consola web",permalink:"/docs/ublhub/web-console"}},u={},i=[{value:"Requisitos",id:"requisitos",level:2},{value:"Inicia Minikube",id:"inicia-minikube",level:2},{value:"Crea un namespace",id:"crea-un-namespace",level:2},{value:"Crea una base de datos",id:"crea-una-base-de-datos",level:2},{value:"Instala Ublhub",id:"instala-ublhub",level:2},{value:"Ingresa a la consola web",id:"ingresa-a-la-consola-web",level:2}],p={toc:i};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"instala-ublhub-operator"},"Instala ",(0,r.kt)("a",{parentName:"h1",href:"https://operatorhub.io/operator/ublhub-operator"},"Ublhub Operator")),(0,r.kt)("h2",{id:"requisitos"},"Requisitos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start/"},"Minikube")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"Kubectl"))),(0,r.kt)("h2",{id:"inicia-minikube"},"Inicia Minikube"),(0,r.kt)("p",null,"Ejecuta el comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"minikube start\n")),(0,r.kt)("p",null,"Habilita addons:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"minikube addons enable ingress\n")),(0,r.kt)("p",null,"Instala OLM:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.22.0/install.sh | bash -s v0.22.0\n")),(0,r.kt)("h2",{id:"crea-un-namespace"},"Crea un namespace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns my-ublhub-operator\n")),(0,r.kt)("h2",{id:"crea-una-base-de-datos"},"Crea una base de datos"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/postgresql.yaml\nkubectl get csv -n operators\n")),(0,r.kt)("p",null,"Instancia la base de datos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-ublhub-operator apply -f -\napiVersion: postgres-operator.crunchydata.com/v1beta1\nkind: PostgresCluster\nmetadata:\n  name: postgresql\nspec:\n  postgresVersion: 14\n  instances:\n    - name: pg-1\n      replicas: 1\n      dataVolumeClaimSpec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  backups:\n    pgbackrest:\n      repos:\n      - name: repo1\n        volume:\n          volumeClaimSpec:\n            accessModes:\n            - ReadWriteOnce\n            resources:\n              requests:\n                storage: 1Gi\n  users:\n    - name: foo\n      databases:\n        - ublhubdb\n      options: "SUPERUSER"\nEOF\n')),(0,r.kt)("p",null,"Espera hasta que tus Pods esten listos."),(0,r.kt)("h2",{id:"instala-ublhub"},"Instala Ublhub"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/ublhub-operator.yaml\nkubectl get csv -n my-ublhub-operator\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-ublhub-operator apply -f -\nkind: "Ublhub"\napiVersion: "ublhub.openubl.io/v1alpha1"\nmetadata:\n  name: ublhub\nspec:\n  db:\n    usernameSecret:\n      name: postgresql-pguser-foo\n      key: user\n    passwordSecret:\n      name: postgresql-pguser-foo\n      key: password\n    url: jdbc:postgresql://postgresql-primary.my-ublhub-operator.svc:5432/ublhubdb\n  storage:\n    type: "filesystem"\n    filesystem:\n      size: "1Gi"\nEOF\n')),(0,r.kt)("h2",{id:"ingresa-a-la-consola-web"},"Ingresa a la consola web"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ingresa a la consola de Minikube")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"minikube dashboard\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Selecciona el namespace ",(0,r.kt)("inlineCode",{parentName:"li"},"my-ublhub-operator")),(0,r.kt)("li",{parentName:"ul"},"Click en ",(0,r.kt)("inlineCode",{parentName:"li"},"Service/Ingresses")),(0,r.kt)("li",{parentName:"ul"},"Click en el Enpoint de Ublhub")))}c.isMDXComponent=!0}}]);