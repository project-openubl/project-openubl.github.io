"use strict";(self.webpackChunkproject_openubl=self.webpackChunkproject_openubl||[]).push([[9332],{15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>d});var r=n(96540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var p=r.createContext({}),i=function(e){var a=r.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=i(e.components);return r.createElement(p.Provider,{value:a},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,s=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=i(n),m=t,d=u["".concat(p,".").concat(m)]||u[m]||g[m]||s;return n?r.createElement(d,l(l({ref:a},c),{},{components:n})):r.createElement(d,l({ref:a},c))}));function d(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=n.length,l=new Array(s);l[0]=m;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[u]="string"==typeof e?e:t,l[1]=o;for(var i=2;i<s;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40446:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>i});var r=n(58168),t=(n(96540),n(15680));const s={title:"Kubernetes"},l="Instala [Searchpe Operator](https://operatorhub.io/operator/searchpe-operator)",o={unversionedId:"searchpe/installation/kubernetes",id:"searchpe/installation/kubernetes",title:"Kubernetes",description:"Requisitos",source:"@site/docs/06-searchpe/03-installation/kubernetes.md",sourceDirName:"06-searchpe/03-installation",slug:"/searchpe/installation/kubernetes",permalink:"/docs/searchpe/installation/kubernetes",draft:!1,editUrl:"https://github.com/project-openubl/website/tree/master/docs/06-searchpe/03-installation/kubernetes.md",tags:[],version:"current",frontMatter:{title:"Kubernetes"},sidebar:"tutorialSidebar",previous:{title:"Java",permalink:"/docs/searchpe/installation/java"},next:{title:"Consola web",permalink:"/docs/searchpe/web-console"}},p={},i=[{value:"Requisitos",id:"requisitos",level:2},{value:"Inicia Minikube",id:"inicia-minikube",level:2},{value:"Crea un namespace",id:"crea-un-namespace",level:2},{value:"Crea una base de datos",id:"crea-una-base-de-datos",level:2},{value:"Instala Searchpe",id:"instala-searchpe",level:2},{value:"Ingresa a la consola web",id:"ingresa-a-la-consola-web",level:2}],c={toc:i},u="wrapper";function g(e){let{components:a,...n}=e;return(0,t.yg)(u,(0,r.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"instala-searchpe-operator"},"Instala ",(0,t.yg)("a",{parentName:"h1",href:"https://operatorhub.io/operator/searchpe-operator"},"Searchpe Operator")),(0,t.yg)("h2",{id:"requisitos"},"Requisitos"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start/"},"Minikube")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"Kubectl"))),(0,t.yg)("h2",{id:"inicia-minikube"},"Inicia Minikube"),(0,t.yg)("p",null,"Ejecuta el comando:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"minikube start --kubernetes-version 1.24.7\n")),(0,t.yg)("p",null,"Habilita addons:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"minikube addons enable ingress\n")),(0,t.yg)("p",null,"Instala OLM:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.22.0/install.sh | bash -s v0.22.0\n")),(0,t.yg)("h2",{id:"crea-un-namespace"},"Crea un namespace"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns my-searchpe-operator\n")),(0,t.yg)("h2",{id:"crea-una-base-de-datos"},"Crea una base de datos"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/postgresql.yaml\nkubectl get csv -n operators\n")),(0,t.yg)("p",null,"Instancia la base de datos:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-searchpe-operator apply -f -\napiVersion: postgres-operator.crunchydata.com/v1beta1\nkind: PostgresCluster\nmetadata:\n  name: postgresql\nspec:\n  postgresVersion: 14\n  instances:\n    - name: pg-1\n      replicas: 1\n      dataVolumeClaimSpec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 1Gi\n  backups:\n    pgbackrest:\n      repos:\n      - name: repo1\n        volume:\n          volumeClaimSpec:\n            accessModes:\n            - ReadWriteOnce\n            resources:\n              requests:\n                storage: 1Gi\n  users:\n    - name: foo\n      databases:\n        - searchpedb\n      options: "SUPERUSER"\nEOF\n')),(0,t.yg)("p",null,"Espera hasta que tus Pods esten listos."),(0,t.yg)("h2",{id:"instala-searchpe"},"Instala Searchpe"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"kubectl create -f https://operatorhub.io/install/searchpe-operator.yaml\nkubectl get csv -n my-searchpe-operator\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},'cat << EOF | kubectl -n my-searchpe-operator apply -f -\nkind: "Searchpe"\napiVersion: "searchpe.openubl.io/v1alpha1"\nmetadata:\n  name: searchpe\nspec:\n  db:\n    usernameSecret:\n      name: postgresql-pguser-foo\n      key: user\n    passwordSecret:\n      name: postgresql-pguser-foo\n      key: password\n    url: jdbc:postgresql://postgresql-primary.my-searchpe-operator.svc:5432/searchpedb\nEOF\n')),(0,t.yg)("h2",{id:"ingresa-a-la-consola-web"},"Ingresa a la consola web"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Ingresa a la consola de Minikube")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-shell"},"minikube dashboard\n")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Selecciona el namespace ",(0,t.yg)("inlineCode",{parentName:"li"},"my-searchpe-operator")),(0,t.yg)("li",{parentName:"ul"},"Click en ",(0,t.yg)("inlineCode",{parentName:"li"},"Service/Ingresses")),(0,t.yg)("li",{parentName:"ul"},"Click en el Enpoint de Searchpe")))}g.isMDXComponent=!0}}]);