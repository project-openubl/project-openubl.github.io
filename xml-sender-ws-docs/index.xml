<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XML Sender WS on Project OpenUBL</title><link>https://project-openubl.github.io/xml-sender-ws-docs/</link><description>Recent content in XML Sender WS on Project OpenUBL</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sat, 11 Jan 2020 14:09:21 +0900</lastBuildDate><atom:link href="https://project-openubl.github.io/xml-sender-ws-docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Instalación</title><link>https://project-openubl.github.io/xml-sender-ws-docs/instalacion/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/instalacion/</guid><description>Instalación con Maven Si utilizas maven entonces agrege las siguientes lineas a su archivo pom.xml:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.github.project-openubl&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xml-sender-ws&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.0.0.Final&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Recuerda cambiar 2.0.0.Final por la última version de la libreria. Puedes acceder a la lista completa de versiones disponibles en Maven Central Repository&amp;lsquo;
Instalación con Gradle Si utilizas Gradle entonces agrege las siguientes lineas a su archivo build.gradle:
dependencies { compile group: &#39;io.github.project-openubl&#39;, name: &#39;xml-sender-ws&#39;, version: &#39;2.</description></item><item><title>BS:sendBill</title><link>https://project-openubl.github.io/xml-sender-ws-docs/billservice-sendbill/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/billservice-sendbill/</guid><description>BillService:sendBill Utilizado para enviar:
Boletas y Facturas. Notas de Crédito. Notas de Débito. Guias de Remisión. Percepciones. Retenciones. Enviar comprobante a la SUNAT Enviar un java.io.File El valor de URL dependerá de qué tipo de documento está intentando enviar:
ServiceConfig config = new ServiceConfig.Builder() .url(&amp;quot;https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService&amp;quot;) .username(&amp;quot;12345678959MODDATOS&amp;quot;) .password(&amp;quot;MODDATOS&amp;quot;) .build(); File file = new File(&amp;quot;12345678959-01-F001-00000001.xml&amp;quot;); BillServiceModel result = BillServiceManager.sendBill(file, config); Es importante que el nombre del archivo tenga la estructura definida por la SUNAT: ruc-codigoComprobante-serie-numero.</description></item><item><title>BS:sendSummary</title><link>https://project-openubl.github.io/xml-sender-ws-docs/billservice-sendsummary/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/billservice-sendsummary/</guid><description>BillService:sendSummary Utilizado para enviar:
Baja. Resumen diario. Enviar comprobante a la SUNAT Enviar un java.io.File El valor de URL dependerá de qué tipo de documento está intentando enviar:
ServiceConfig config = new ServiceConfig.Builder() .url(&amp;quot;https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService&amp;quot;) .username(&amp;quot;12345678959MODDATOS&amp;quot;) .password(&amp;quot;MODDATOS&amp;quot;) .build(); File file = new File(&amp;quot;12345678959-RA-20180316-00001.xml&amp;quot;); BillServiceModel result = BillServiceManager.sendSummary(file, config); Es importante que el nombre del archivo tenga la estructura definida por la SUNAT: ruc-codigoComprobante-serie-numero.xml.
Enviar un array de bytes[] También puedes enviar un array de bytes y la libreria se encargará del resto.</description></item><item><title>BS:getStatus</title><link>https://project-openubl.github.io/xml-sender-ws-docs/billservice-getstatus/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/billservice-getstatus/</guid><description> BillService:getStatus Utilizado para consultar tickets:
ServiceConfig config = new ServiceConfig.Builder() .url(&amp;quot;https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService&amp;quot;) .username(&amp;quot;12345678959MODDATOS&amp;quot;) .password(&amp;quot;MODDATOS&amp;quot;) .build(); BillServiceModel result = BillServiceManager.getStatus(&amp;quot;miTicket&amp;quot;, config);</description></item><item><title>BCS:getStatus</title><link>https://project-openubl.github.io/xml-sender-ws-docs/billconsultservice-getstatus/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/billconsultservice-getstatus/</guid><description> BillConsultService:getStatus Utilizado para consultar el estado del comprobante en la SUNAT:
ServiceConfig config = new ServiceConfig.Builder() .url(URL_CONSULTA) .username(USERNAME) .passwod(PASSWORD) .build(); BillConsultBean consult = new BillConsultBean.Builder() .ruc(&amp;quot;1234567894&amp;quot;) .tipo(&amp;quot;01&amp;quot;) .serie(&amp;quot;F001&amp;quot;) .numero(102) .build(); StatusResponse response = BillConsultServiceManager.getStatus(consult, config);</description></item><item><title>BCS:getStatusCdr</title><link>https://project-openubl.github.io/xml-sender-ws-docs/billconsultservice-getstatuscdr/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/billconsultservice-getstatuscdr/</guid><description> BillConsultService:getStatusCdr Utilizado para extraer el CDR de un comproabante existente en la SUNAT:
ServiceConfig config = new ServiceConfig.Builder() .url(URL_CONSULTA) .username(USERNAME) .passwod(PASSWORD) .build(); BillConsultBean consult = new BillConsultBean.Builder() .ruc(&amp;quot;1234567894&amp;quot;) .tipo(&amp;quot;01&amp;quot;) .serie(&amp;quot;F001&amp;quot;) .numero(102) .build(); StatusResponse response = BillConsultServiceManager.getStatusCdr(config, consult);</description></item><item><title>BVS:getStatus</title><link>https://project-openubl.github.io/xml-sender-ws-docs/billvalidservice-getstatus/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/billvalidservice-getstatus/</guid><description> BillValidService:getStatus Verificar la autenticidad de un archivo XML:
File file = new File(&amp;quot;../folder/F001-00005954.xml&amp;quot;); ServiceConfig config = new ServiceConfig.Builder() .url(&amp;quot;https://e-factura.sunat.gob.pe/ol-it-wsconsvalidcpe/billValidService&amp;quot;) .username(USERNAME) .passwod(PASSWORD) .build(); StatusResponse status = BillValidServiceManager.getStatus(file, config);</description></item><item><title>Control de errores</title><link>https://project-openubl.github.io/xml-sender-ws-docs/control-errores/</link><pubDate>Tue, 28 Jan 2020 00:39:09 +0900</pubDate><guid>https://project-openubl.github.io/xml-sender-ws-docs/control-errores/</guid><description>Control de errores SUNAT Cuando una petición a BillService devuelve algun error es posible controlar esos errores haciendo uso de la interfaz:
interface ErrorBillServiceProviderFactory { ....} Nota: Se recorrerá todos las instancias que implementen la interfaz ErrorBillServiceProviderFactory y se detendrá el recorrido cuando alguna instance devuelva un valor diferente a null.
BillServiceProviderFactory por defecto CLASE DESCRIPCION ACTIVO POR DEFECTO ErrorExcepcionBillServiceProviderFactory Errores entre 100 y 1999 inclusive SI ErrorRechazoBillServiceProviderFactory Errores entre 2000 y 3999 inclusive SI ErrorObservacionesBillServiceProviderFactory Errores mayores a 4000 SI Error2324BillServiceProviderFactory Error para el error 2324.</description></item></channel></rss>